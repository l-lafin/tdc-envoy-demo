version: "3.7"

services:
  router:
    container_name: tdc.platform.router
    image: tdc.platform.router
    depends_on:
      - gateway
    build:
      context: platform/router
    ports:
      - "443:443"
      - "9090:9090"
    volumes:
      - ./platform/router/envoy.yml:/etc/envoy/envoy.yml
      - ./platform/router/ssl:/etc/ssl

  dex:
    container_name: tdc.platform.dex
    image: sticksnleaves/dex:2.9
    command: dex serve /etc/dex/dex.yml
    ports:
      - 5556:5556
    volumes:
      - ./platform/dex/config/:/etc/dex/
      - ./platform/dex/templates/password.html:/go/src/github.com/coreos/dex/web/templates/password.html
    healthcheck:
      test: curl --fail --insecure https://localhost:5556/dex/healthz || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      default:
        aliases:
          - dex.tdc.demo.local

  gateway:
    container_name: tdc.digihero.gateway
    image: tdc.digihero.gateway
    depends_on:
      - oauth2-proxy
      - dummy-backend
      - frontend
    build:
      context: apps/digihero/services/gateway
    networks:
      default:
        aliases:
          - digihero.gateway.apps.internal
    ports:
      - "8888:8080"
      - "9999:9090"
    env_file:
      - env/.env.gateway
    volumes:
      - ./apps/digihero/services/gateway/envoy.template.yml:/envoy.template.yml

  oauth2-proxy:
    container_name: tdc.digihero.oauth2-proxy
    depends_on:
      - dex
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.2-amd64
    networks:
      default:
        aliases:
          - digihero.oauth2-proxy.apps.internal
    expose:
      - "8080"
    env_file:
      - env/.env.oauth2-proxy
      - env/.env.secrets

  frontend:
    stdin_open: true
    container_name: tdc.digihero.frontend
    image: tdc.digihero.frontend
    build:
      context: .
      dockerfile: ./apps/digihero/services/frontend/Dockerfile
      target: build
    ports:
      - "3001:3000"
    networks:
      default:
        aliases:
          - digihero.frontend.apps.internal
    volumes:
      - ./apps/digihero/services/frontend:/apps/digihero/services/frontend
      - /apps/digihero/services/frontend/node_modules/

  dummy-backend:
    container_name: tdc.digihero.dummy-backend
    image: tdc.digihero.dummy-backend
    build:
      context: .
      dockerfile: apps/digihero/services/dummy-backend/Dockerfile
      target: build
    command: dotnet watch --project services/dummy-backend/dummy-backend.csproj run
    ports:
      - "4000:8080"
      - "4001:9090"
    networks:
      default:
        aliases:
          - digihero.dummy-backend.apps.internal
    volumes:
      - ./apps/digihero/services/dummy-backend/:/app/services/dummy-backend/
      - /app/services/dummy-backend/obj/
      - /app/services/dummy-backend/bin/
